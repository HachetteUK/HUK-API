swagger: '2.0'
info:
  version: '1.0.6'
  title: Product API
  description: | 
    HUK API To Access HUK products.

    Our new Bibliographic API will allow you to access our Product data. 
    Currently this is a Read-Only API (GET methods), which includes Images
    and catregorization.

    ## Endpoints
    Currently we have two endpoints.

    ### Test
    hachetteuk-test.apigee.net 

    ### Production
    hachetteuk-prod.apigee.net

host: hachetteuk-test.apigee.net
basePath: /api/v1
schemes:
  - https
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: x-apikey
security:
  - APIKeyHeader: []
tags:
  - name: products
    description: Locate Hachette UK products.
  - name: utility
    description: Utility methods for products.
  - name: search
    description: Full text searching
paths:
  /products:
    get:
      tags:
        - products
      summary: Gets a list of Products
      description: |
        Gets a list of `product` objects - normally books.

        Optional query param of **limit** determines
        size of returned array
      produces:
        - application/json
      parameters:
        -
          name: filterByTimestamp
          in: query
          description: |   
             Get products updated since this date & time. Please note we require you to `convert to UK GMT`. Format is:

              YYYY-MM-DDTHH:MM:SS
 
              YYYY = Year
              MM = Month
              DD = Day
              T = Time
              HH = Hour - 24 hour
              MM = Minute
              SS = Seconds

             Example format - 2018-07-04T09:00:00
          required: false
          type: string
        -
          name: filterByImprints
          in: query
          description: Filters products with one of these Imprints.
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        -
          name: filterByDivisions
          in: query
          description: Filters products with one of these Divisions.
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        -
          name: filterByIsActive
          in: query
          description: Filters product which are Active (or not).
          required: false
          type: boolean
        -
          name: editionId
          in: query
          description: Get a product with its editionId.
          required: false
          type: number
        -
          name: limit
          in: query
          description: Size of collection to be returned.
          required: false
          type: number
          format: integer
          default: 20
          minimum: 1
          maximum: 999
        -
          name: page
          in: query
          description: Page number you wish returned.
          required: false
          type: number
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              currentPage:
                type: integer
                description: If using Paging, this will return current page.
              record:
                type: array
                items:
                  $ref: '#/definitions/Product'
        204:
          description: No content found.
        401:
          $ref: '#/responses/UnauthorizedError'
  /products/{isbn13}:
    get:
      tags:
        - products
      summary: Get a Product using its ISBN13
      description: |
        Gets `product` object (normally a book).
      produces:
        - application/json
      parameters:
        -
          name: isbn13
          in: path
          description: ISBN13 to fetch
          required: true
          type: string
        -
          name: limit
          in: query
          description: Size of collection to be returned.
          required: false
          type: number
          format: double
      responses:
        200:
          description: Successful response containing a Hachette product
          schema:
              $ref: '#/definitions/Product'
        204:
          description: No content found.
        401:
          $ref: '#/responses/UnauthorizedError'
  /products/search/{title}:
    get:
      tags:
        - search
      summary: Search for a Product using its Title.
      description: |
        Gets `product` search objects.
      produces:
        - application/json
      parameters:
        - 
          name: title
          in: path
          description: Title to search with.
          required: true
          type: string
        -
          name: filterByImprints
          in: query
          description: Filters products with one of these Imprints.
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        -
          name: filterByDivisions
          in: query
          description: Filters products with one of these Divisions.
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        -
          name: limit
          in: query
          description: Size of collection to be returned.
          required: false
          type: number
          format: integer
          default: 20
          minimum: 1
          maximum: 999
        -
          name: page
          in: query
          description: Page number you wish returned.
          required: false
          type: number        
        - name: fuzzy
          in: query
          description: Use Fuzzy Search for Title
          required: false
          type: boolean
      responses:
        200:
          description: Successful response containing a Hachette product
          schema:
              $ref: '#/definitions/SearchProduct'
        204:
          description: No content found.
        400:
          description: Issue with parameters passed into API.
        401:
          $ref: '#/responses/UnauthorizedError'
  /products/count:
    get:
      tags:
        - utility
      summary: Gets a count of Product records.
      description: |
        Gets a count of product records. Useful before Paginating and iterating through a collection.
      produces:
        - application/json
      parameters:
        -
          name: filterByTimestamp
          in: query
          description: |   
             Get products updated since this date & time. Please note we require you to `convert to UK GMT`. Format is:

              YYYY-MM-DDTHH:MM:SS
 
              YYYY = Year
              MM = Month
              DD = Day
              T = Time
              HH = Hour - 24 hour
              MM = Minute
              SS = Seconds

             Example format - 2018-07-04T09:00:00
          required: false
          type: string
        -
          name: filterByImprints
          in: query
          description: Filters products with one of these Imprints.
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        -
          name: filterByDivisions
          in: query
          description: Filters products with one of these Divisions.
          required: false
          type: array
          collectionFormat: multi
          items:
            type: string
        -
          name: filterByIsActive
          in: query
          description: Filters product which are Active (or not).
          required: false
          type: boolean
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              record:
                type: array
                items:
                  $ref: '#/definitions/recordCount'
        401:
          $ref: '#/responses/UnauthorizedError'
responses:
  UnauthorizedError:
    description: API key is missing or invalid.
    headers:
      WWW_Authenticate:
        type: string
definitions:
  Product:
    title: Product
    type: object
    properties:
      editionID:
        type: number
        description: unique ID for this Edition.
      coverTitle:
        type: string
        description: Title that appears on the cover of this Edition.
      isbn13:
        type: string
        description: ISBN13 which resides within the barcode.
      isActive:
        description: Is the record active.
        type: boolean
      subTitle:
        type: string
        description: If the product has a sub title, it will appear here.
      coverAuthors:
        type: string
        description: Author names who will appear on the product.
      workReference:
        type: string
        description: Reference related to this work.
      binding:
        type: string
        description: Example Paperback or Hardback.
      division:
        type: string
        description: Publishers name.
      format:
        type: object
        description: Format of the product. Example CD, MP3, Kindle etc
        items:
          - $ref: '#/definitions/Format'
      sortTitle:
        type: string
        description: Title you can use in any sorting algorthims.
      workID:
        type: string
        description: Work ID links all the different versions if the product together. The number will be same for various products and these are linked as a 'Work'.
      imprint:
        type: string
        description: Imprint name.
      pubDate:
        type: string
        description: published date (or if in the future, to be published date)
      productType:
        type: string
        description: Type of Product. Example Book, App, Ebook.
      seriesNumber:
        type: number
        description: If a product is part of a Series, this represents N in Series.
      seriesTitle:
        type: string
        description: If a product is part of a Series, this represents the Series Title.
      issuedNumber:
        type: number
        description: If the product has been reissued, this number represents how many times.
      minimumAge:
        type: number
        description: Minimum age in months a product is aimed at.
      maximumAge:
        type: number
        description: Maximum age in months a product is aimed at.
      description:
        type: string
        description: Long Description of a product.
      keynote:
        type: string
        description: Short Description of a product.
      status:
        type: string
        description: Current status of the product (Confirmed, Abandoned etc).
      copyRightYear:
        type: number
        description: Copyright year.
      pubPrice:
        type: number
        description: published price of the product.
      pageCount:
        type: number
        description: Page count for the product.
      keywords:
        type: array
        items: 
          type: string
      editionTypes:
        description: These are the ONIX Edition Type codes
        type: array
        items:
          type: number 
      relatedProducts:
        description: Array of EANs that are related to this product.
        type: array
        items:
          type: string
      timeStamp:
        type: string
        description: Timestamp when record was updated Hachettes end.
      people:
        description: Contributors of a Product is where you can find Authors etc
        type: object
        items: 
          $ref: '#/definitions/Person'
      categories:
        description: Category of book
        type: object
        items:
          - $ref: '#/definitions/BISAC'
          - $ref: '#/definitions/BIC'
          - $ref: '#/definitions/Thema'
      availability:
        description: Products availability.
        type: object
        items:
          $ref: '#/definitions/Availability'    
      reviews:
        description: Reviews of a Product.
        type: object
        items:
          $ref: '#/definitions/Review'
      images:
        type: object
        description: Different Images for a Product.
        items:
          - $ref: '#/definitions/Image'
      awards:
        type: object
        description: If a product is shortlisted, won, longlisted etc for an Award, it will be held here.
        items:
          - $ref: '#/definitions/Award'
      link:
        $ref: '#/definitions/Link' 
  Person:
    title: Person
    description: Person who contribute towards a Product.
    type: object
    properties:
      id:
        type: number
      firstName:
        type: string
        description: First Name of the Person.
      lastName:
        type: string
        description: Last Name of the Person.
      role:
        type: string
        description: The role the Person has made to the book.
        enum:
          - Author
          - Illustrator
          - Reader
          - Editor
      code:
        type: string
        description: Role ONIX Code.
      link:
        $ref: '#/definitions/Link'
  CategoryTypes:
    title: Category Types
    description: Category Types
    type: string
    enum: &REL
      - BIC
      - BISAC
      - Thema
      - ONIX
      - Publisher mapping
      - Other
  BISAC:
    title: BISAC
    description: Book Industry Communication (BIC) Codes
    type: object
    properties :
      categorytype:
        type: string
        enum: *REL
      code:
        type: string
      description:
        type: string
      version:
        type: string
        enum:
          - 2016
          - 2017
      mainCode:
        type: boolean
        description: Main code for this version. If true, if you have multiple versions, use the code mainCode=true as the main category.
  BIC:
    title: BIC 
    description: Book Industry Study Group (BISAC) Code
    type: object
    properties :
      categorytype:
        type: string
        enum: *REL
      code:
        type: string
      description:
        type: string 
      version:
        type: string
        enum:
          - 2.0
          - 2.1
      mainCode:
        type: boolean
        description: Main code for this version. If true, if you have multiple versions, use the code mainCode=true as the main category.
  Thema:
    title: Thema 
    description: Thema Subject Category (Thema is latin for 'Subject')
    type: object
    properties :
      categorytype:
        type: string
        enum: *REL
      code:
        type: string
      description:
        type: string 
      version:
        type: string
        enum:
          - 1.0
          - 1.1
          - 1.2
  Format:
    title: Format
    description: Format codes,
    type: object
    properties :
      categorytype:
        type: string
        enum: *REL
      code:
        type: string
      description:
        type: string 
      version:
        type: string
        enum:
          - 2.1
          - 3.0
  Relations:
    title: Relations
    description: Relationships exposed for Links
    type: string
    enum: &RELS
      - self
      - person
  Link:
    title: Link
    description: Links/Relationships to other Resources.
    properties:
      href:
        type: string
        title: URI back to the object.
      method:
        type: string
        title: HTTP verb.
      rel:
        type: string
        title: Link type. Example 'self' for the object.
        enum: *RELS
  Availability:
    title: Availability
    description: Product availability.
    type: object
    properties:
      code:
        type: string
        description: Availability code.
      description:
        type: string
        description: Availability description.
  Review:
    title: Review
    description: Reviews of a Product.
    type: object
    properties:
      id:
        type: number
        description: unique ID for the review.
      editionId:
        type: number
        description: Edition this review relates to.
      reviewText:
        type: string
        description: The actual review marketing text.
      reviewer:
        type: string
        description: The person/company who conducted the review.
      source:
        type: string
        description: Website/Newspaper/Blog etc the review appeared in.
  Image:
    title: Image
    description: Images associated with the Product.
    type: object
    properties:
      url:
        type: string
        description: URL to download the image
      type:
        type: string
        description: Image Type.
        enum:
          - Original
          - Web
          - Thumbnail
  Award:
    title: Award
    description: Awards one for a Product or awards shortlisted for.
    type: object
    properties:
      id:
        type: number
        description: Id of the Award
      editionId:
        type: string
        description: Edition Id the Award is linked to.
      title:
        type: string
        description: Title/Description of the Award.
      announcedDate:
        type: string
        description: Date & time the Award was announced publicly.
      stage:
        type: string
        description: Stage at which the product got in the Award system.
        enum:
          - Commended
          - Nominated
          - Winner
          - Shortlisted
          - Joint winner
          - Runner-up
          - Longlisted
  recordCount:
    title: record count
    description: count record
    type: object
    properties:
      count:
        type: number
        description: Count of records.
  SearchProduct:
    title: Details from a Product Search
    description: Record receives when doing a search
    type: object
    properties:
      id: 
        type: string
        title: Record ID
      isbn13:
        type: string
        description: ISBN13 which resides within the barcode.
      coverTitle:
        type: string
        description: Title that appears on the cover of this Edition.
      subTitle:
        type: string
        description: If the product has a sub title, it will appear here.
      division:
        type: string
        description: Publishers name.
      imprint:
        type: string
        description: Imprint name.


